{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "LogicAppName": {
            "type": "string",
            "defaultValue": "[concat('logic-app-', uniqueString(resourceGroup().id))]",
            "minLength": 1,
            "maxLength": 80,
            "metadata": {
                "description": "Name of the Logic App."
            }
        },
        "appName": {
            "type": "string",
            "metadata": {
                "description": "The name of the function app that you wish to create."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [ "Standard_LRS", "Standard_GRS", "Standard_RAGRS" ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "runtime": {
            "type": "string",
            "defaultValue": "python",
            "metadata": {
                "description": "The language worker runtime to load in the function app."
            }
        },
        "repoURL": {
            "type": "string",
            "defaultValue": "https://github.com/qreasio/pyfunc.git"
        },
        "branch": {
            "type": "string",
            "defaultValue": "master"
        }
    },
    "variables": {
        "functionAppName": "[parameters('appName')]",
        "functionName": "Echo1",
        "hostingPlanName": "[parameters('appName')]",
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'azfunctions')]",
        "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "functionWorkerRuntime": "[parameters('runtime')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2018-02-01",
            "location": "[parameters('location')]",
            "kind": "Storage",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "size": "S1",
                "family": "S",
                "capacity": 1
            },
            "kind": "linux",
            "name": "[variables('hostingPlanName')]",
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "workerSize": 0,
                "workerSizeId": 0,
                "numberOfWorkers": 1,
                "hostingEnvironment": "",
                "reserved": true
            },
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "dependsOn": []
        },
        {
            "apiVersion": "2018-02-01",
            "name": "[variables('functionAppName')]",
            "type": "Microsoft.Web/sites",
            "location": "[parameters('location')]",
            "kind": "functionapp,linux,container",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "enabled": true,
                "reserved": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "10.15.2"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "[variables('functionWorkerRuntime')]"
                        }
                    ]
                },
                "alwaysOn": true,
                "linuxFxVersion": "DOCKER|microsoft/azure-functions/python:3.0-python3.8"
            },
            "resources": [
                {
                    "apiVersion": "2018-02-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "[parameters('repoURL')]",
                        "branch": "[parameters('branch')]",
                        "IsManualIntegration": true
                    }
                }
            ]
        },
        {
            "name": "[parameters('LogicAppName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[parameters('location')]",
            "apiVersion": "2019-05-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/sourcecontrols', variables('functionAppName'), 'web')]"
            ],
            "tags": {
                "displayName": "LogicApp"
            },
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Azure_Function": {
                            "type": "Function",
                            "inputs": {
                                "body": "@triggerBody()",
                                "function": {
                                    "id": "[resourceId('Microsoft.Web/sites/functions', variables('functionAppName'), variables('functionName'))]"
                                }
                            },
                            "runAfter": {}
                        },
                        "Response": {
                            "type": "Response",
                            "inputs": {
                                "statusCode": 200,
                                "body": "@body('Azure_Function')"
                            },
                            "runAfter": {
                                "Azure_Function": [
                                    "Succeeded"
                                ]
                            }
                        }
                    },
                    "parameters": {},
                    "triggers": {
                        "Request": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {}
                },
                "parameters": {}
            }
        }
    ]
}